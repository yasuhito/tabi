#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require "rubygems"

$LOAD_PATH.unshift File.expand_path( File.join File.dirname( __FILE__ ), "..", "lib" )
$LOAD_PATH.unshift File.expand_path( File.join File.dirname( __FILE__ ), ".." )

require "config"
require "gli"
require "tabi_version"
require "user-db"


include GLI


program_desc "tabi cloud router management command"

version Tabi::VERSION


def list_users dir
  Dir.glob( File.join( dir, "*" ) ).each do | each |
    puts File.basename( each )
  end
end


desc "Adds a user to waiting list"
long_desc """
Adds a user to pending approval queue. One can allow or deny the
internet connection of the pending users with \"tabi allow\" or \"tabi
deny\" command.
"""
arg_name "MAC_address ..."
command :pending do | c |
  c.action do | global_options, options, args |
    if args.empty?
      list_users pending_dir
    else
      args.each do | each |
        UserDB.new.pending each
      end
    end
  end
end


desc "Allows user's connection"
long_desc """
Allows the internet connection of specified pending user.
"""
arg_name "MAC_address ..."
command :allow do | c |
  c.action do | global_options, options, args |
    if args.empty?
      list_users allow_dir
    else
      args.each do | each |
        UserDB.new.allow each
      end
    end
  end
end


desc "Denies user's connection"
long_desc """
Denies the internet connection of specified pending user.
"""
arg_name "MAC_address ..."
command :deny do | c |
  c.action do | global_options, options, args |
    if args.empty?
      list_users deny_dir
    else
      args.each do | each |
        UserDB.new.deny each
      end
    end
  end
end


exit GLI.run( ARGV )
